# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: test
- Location: /Users/pejin/Documents/Playwright QA/tests/test-19.spec.ts:3:5

# Error details

```
Error: locator.click: Target page, context or browser has been closed
Call log:
  - waiting for getByLabel('Prospectives').getByRole('link', { name: 'Delilah Kannon' })

    at /Users/pejin/Documents/Playwright QA/tests/test-19.spec.ts:20:87
```

# Test source

```ts
   1 | import { test, expect } from '@playwright/test';
   2 |
   3 | test('test', async ({ page }) => {
   4 |   await page.goto('https://brella--qa.sandbox.my.salesforce.com/?ec=302&startURL=%2Fvisualforce%2Fsession%3Furl%3Dhttps%253A%252F%252Fbrella--qa.sandbox.lightning.force.com%252Flightning%252Fr%252FContract%252F800QL00000HtrOUYAZ%252Fview');
   5 |   await page.getByRole('textbox', { name: 'Username' }).click({
   6 |     button: 'right'
   7 |   });
   8 |   await page.getByRole('textbox', { name: 'Username' }).fill('qa@joinansel.com.qa');
   9 |   await page.getByRole('textbox', { name: 'Password' }).click({
   10 |     button: 'right'
   11 |   });
   12 |   await page.getByRole('textbox', { name: 'Password' }).fill('q8xPmBoudN1W');
   13 |   await page.getByRole('button', { name: 'Log In to Sandbox' }).click();
   14 |   await page.getByRole('tab', { name: 'Details' }).click();
   15 |   await page.getByRole('tab', { name: 'Related' }).click();
   16 |   await page.getByRole('link', { name: 'CS-' }).click();
   17 |   //await page.locator('#window').click();
   18 |   await page.getByRole('tab', { name: 'Related' }).click();
   19 |   await page.getByRole('link', { name: 'Delilah Kannon' }).click();
>  20 |   await page.getByLabel('Prospectives').getByRole('link', { name: 'Delilah Kannon' }).click();
      |                                                                                       ^ Error: locator.click: Target page, context or browser has been closed
   21 |   await page.getByRole('tab', { name: 'Details' }).click();
   22 |   await page.getByRole('button', { name: 'Get The Link' }).click();
   23 |   const linkElement = page.getByText('https://qa-ansel-platform.joinansel.com/enrollment');
   24 |
   25 |   if (await linkElement.isVisible()) {
   26 |       const linkText = await linkElement.innerText();
   27 |       await page.goto(linkText, { waitUntil: 'domcontentloaded' });
   28 |   } else {
   29 |       console.log('⚠️ Link not found, trying alternative methods...');
   30 |
   31 |       await page.getByRole('button', { name: 'Get The Link' }).click();
   32 |       // Shadow DOM Handling
   33 |       const shadowLink = await page.evaluate(() => {
   34 |           const shadowHost = document.querySelector('#sectionContent-174');
   35 |           return shadowHost?.shadowRoot?.querySelector('a')?.getAttribute('href') ?? null;
   36 |       });
   37 |
   38 |       if (shadowLink) {
   39 |           await page.goto(shadowLink, { waitUntil: 'domcontentloaded' });
   40 |       } else {
   41 |           console.log('⚠️ Trying XPath method...');
   42 |           const xpathLink = page.locator('//a[contains(text(), "https://qa-ansel-platform.joinansel.com/enrollment/?token=IPm_FyFilMzbFGP4pu8MchLwxY5f5afFNZrjkJH0IKVoNLHbeUFAFcnGI5Bm8X9jx-vSpJYfi5oeupVtfpK_Z6E3oS0CMlw3Qd-EX0DnS9PfrzQWgi57mOejWmd8FIJM4RCPjTn7T0eIZ0aUEG6Q-_Q73bzrQzDOg2N--hFGCBvXI2t6ChX6nEv9jZ3UbV3KVh5J30qDmxRbLgKnWkNgtQR7waHdw99ICGdTMbaL_wFcYkJePQrhlPOLse0jKBZUbFpmT_ESBK2sn7pRmuqUa7TsQW0dEhFXyLfO5Ydpi9hyTFQOa5m-uNJ3cYna6g6o0kGZscrTaCy27OET4uWlSn9pH4j2GU5-VrqR8d-f7TrILC_1FTulw6zgbUMyk2XZ54IQZwBjig3YwrMd3DSpqgFhZuMPtGcsHXKf9gd-eAZJBnxLsVSaMJXGJSdSGYlsgCeLPxHVzphD35xNEmo24mT8qpfQugJvCmnS6Nztclmf4nPHMfC45haWaCxMcHmoXZmanRXryLEQ36G39CCdJOEI6q20Vajr-iwOtTWigthqgpvz24ZMbPZ9wTZZJnVd59skhg7I_ifHxc0HUuWByT03j1j_aLbT8WwK7MQijrVjjSWCkjLBHhzpPzn-AbDgpu9jb_HVD3eGnct-10X0D91Y4waFuJZkRlkhSlz-tAgqWuTS0-kVG0t6ey_gbeFGX6xbwifaTcFebBaDMVGJZ9uakXPkXIgl0Rc2uCV5hFPIIc5MlurVqkDUG3qAdoXJMIEIm9UZoVqTRWZLwZtIIkI_S6k0kGauUEy4rOXetefJ-JNR2Ux8ssOrIHdthTFjd5iO6lHs0gAcMimCOiJ3Ep-4KgAZDOf71NwPGzr6zJoTd7oibBrxd7jFekkZZb7Y6I-4aceCYaAyP-0sq9RIzPWE1WMcS4MS2luIIdRt9BfOIihK5l3MinJcG7CnVP2wW7uJZMPXVFIHXh2zbzCmZXBLqMNBsSgstR_K5W58JOMBfmEOmc42VukP7dnEI0QIvey1DOZ_7EyUZQYu9z1Kh8uCo0XfRnnfgolLgMKXrZUDYKAqTjr9RqKDPKjTQ2OsMrXwmTUqN0ITFPlXHULGfr8amvmbO1Mepa--ZdwgGXjrpUTZHe-GIT1ylKfIbXcURm8om6vLyQ3UJDOiUzfyLZmyalgcfmaZkiQTy9HKkj350Yz9RNdXeWKD8_cW5K4k2FKoytFmr-b7UzvgsQq1yRDzUy6060y5YwEhG31DKRBKBgx50avPrt1LVV40Gex530mrrbgpwi7lGUDIa2JKIUMsrRmHqJnP4vbEAUHLVj77_MbxGQIBHLfDlyz-RUxHr72nJrrO95YsWx9Vvrs9niOi-tBKFaiV_J4AFuxEsIU=")]');
   43 |           if (await xpathLink.isVisible()) {
   44 |               await xpathLink.click({ force: true });
   45 |           } else {
   46 |               console.log('❌ Could not find the enrollment link.');
   47 |           }
   48 |       }
   49 |   }
   50 |
   51 |   /*await page.locator('#input-1927').dblclick();
   52 |
   53 |    await page1.getByRole('button', { name: 'Next step' }).click();
   54 |   await page1.getByRole('textbox', { name: 'MM/DD/YYYY' }).click({
   55 |     button: 'right'
   56 |   });
   57 |   await page1.getByRole('textbox', { name: 'MM/DD/YYYY' }).fill('11/12/1978');
   58 |   await page1.getByRole('textbox', { name: 'XXX-XX-XXXX' }).click();
   59 |   await page1.getByRole('textbox', { name: 'XXX-XX-XXXX' }).fill('672-06-1075');
   60 |   await page1.getByRole('button', { name: 'Next step' }).click();
   61 |   await page1.goto('https://qa-ansel-platform.joinansel.com/enrollment/learnAboutCoverage');
   62 |   await page1.getByRole('button', { name: 'Next step' }).click();
   63 |   await page1.getByText('No', { exact: true }).click();
   64 |   await page1.getByText('I\'m not a parent').click();
   65 |   await page1.getByRole('button', { name: 'Next step' }).click();
   66 |   await page1.getByRole('button', { name: 'Next step' }).click();
   67 |   await page1.getByRole('button', { name: 'Next step' }).click();
   68 |   await page1.getByRole('button', { name: 'Next step' }).click();
   69 |   await page1.getByRole('button', { name: 'Next step' }).click();
   70 |   await page1.getByRole('button', { name: 'Next step' }).click();
   71 |   await page1.getByRole('button', { name: 'Next step' }).click();
   72 |   await page1.getByRole('button', { name: 'Next step' }).click();
   73 |   await page1.getByRole('button', { name: 'Next step' }).click();
   74 |   await page1.getByRole('link', { name: 'Skip this' }).click();
   75 |   await page1.getByRole('button', { name: 'Next step' }).click();
   76 |   await page1.getByRole('button', { name: 'Next step' }).click();
   77 |   await page1.getByRole('listbox').filter({ hasText: 'FemaleMale' }).click();
   78 |   await page1.getByRole('option', { name: 'Female' }).locator('span').click();
   79 |   await page1.getByRole('textbox', { name: '(XXX) XXX-XXXX' }).click();
   80 |   await page1.getByRole('textbox', { name: '(XXX) XXX-XXXX' }).fill('(234) 545-678  ');
   81 |   await page1.getByRole('listbox').filter({ hasText: 'MobileStandard' }).click();
   82 |   await page1.getByRole('option', { name: 'Mobile' }).locator('span').click();
   83 |   await page1.locator('input[name="SET_CITY"]').click();
   84 |   await page1.locator('input[name="SET_CITY"]').fill('Miami');
   85 |   await page1.getByRole('button', { name: 'Next step' }).click();
   86 |   await page1.locator('input[name="SET_STREET_ADDRESS"]').click();
   87 |   await page1.locator('input[name="SET_STREET_ADDRESS"]').fill('Ocean view');
   88 |   await page1.locator('input[name="SET_ZIP_CODE"]').click();
   89 |   await page1.locator('input[name="SET_ZIP_CODE"]').fill('45600');
   90 |   await page1.getByRole('button', { name: 'Next step' }).click();
   91 |   await page1.locator('input[name="password"]').click();
   92 |   await page1.locator('input[name="password"]').fill('Demo123456');
   93 |   await page1.locator('input[name="confirmPassword"]').click();
   94 |   await page1.locator('input[name="confirmPassword"]').fill('Demo123456');
   95 |   page1.once('dialog', dialog => {
   96 |     console.log(`Dialog message: ${dialog.message()}`);
   97 |     dialog.dismiss().catch(() => {});
   98 |   });
   99 |   const page2Promise = page1.waitForEvent('popup');
  100 |   await page1.getByText('I accept the Terms and Privacy').click();
  101 |   const page2 = await page2Promise; */
  102 | });
```