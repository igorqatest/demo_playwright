# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: test
- Location: /Users/pejin/Documents/Playwright QA/tests/test-18.spec.ts:3:5

# Error details

```
Error: locator.click: Test timeout of 30000ms exceeded.
Call log:
  - waiting for locator('dl').filter({ hasText: 'Role*--None--' }).getByRole('combobox')
    - locator resolved to <a title="" tabindex="0" class="select" role="combobox" aria-required="true" aria-haspopup="true" aria-disabled="false" aria-expanded="false" href="javascript:void(0);" data-interactive-lib-uid="6" data-aura-rendered-by="2010:0" aria-describedby="2000:0-label">--None--</a>
  - attempting click action
    - waiting for element to be visible, enabled and stable
    - element is visible, enabled and stable
    - scrolling into view if needed
    - done scrolling
    - performing click action

    at /Users/pejin/Documents/Playwright QA/tests/test-18.spec.ts:30:87
```

# Test source

```ts
   1 | import { test, expect } from '@playwright/test';
   2 |
   3 | test('test', async ({ page }) => {
   4 |   await page.goto('https://brella--qa.sandbox.my.salesforce.com/?ec=302&startURL=%2Fvisualforce%2Fsession%3Furl%3Dhttps%253A%252F%252Fbrella--qa.sandbox.lightning.force.com%252Flightning%252Fo%252FAccount%252Flist%253FfilterName%253D__Recent');
   5 |   await page.getByRole('textbox', { name: 'Username' }).click();
   6 |   await page.getByRole('textbox', { name: 'Username' }).fill('qa@joinansel.com.qa');
   7 |   await page.getByRole('textbox', { name: 'Password' }).click();
   8 |   await page.getByRole('textbox', { name: 'Password' }).fill('q8xPmBoudN1W');
   9 |   await page.getByRole('button', { name: 'Log In to Sandbox' }).click();
  10 |   await page.getByRole('link', { name: 'Contacts' }).click();
  11 |   await page.getByRole('button', { name: 'New' }).click();
  12 |   await page.getByRole('button', { name: 'Next' }).click();
  13 |   await page.getByRole('textbox', { name: 'First Name' }).click();
  14 |   await page.getByRole('textbox', { name: 'First Name' }).fill('Contact');
  15 |   await page.waitForTimeout(1000);
  16 |   await page.getByRole('textbox', { name: '*Last Name' }).click();
  17 |   await page.getByRole('textbox', { name: '*Last Name' }).fill('Test');
  18 |   await page.waitForTimeout(1000);
  19 |   await page.getByRole('textbox', { name: 'Email' }).click();
  20 |   await page.getByRole('textbox', { name: 'Email' }).fill('igor.pejin+contacttest1@joinansel.com');
  21 |   await page.getByRole('combobox', { name: 'Strategic Partner Name' }).click();
  22 |   await page.waitForTimeout(1000);
  23 |   await page.getByRole('option', { name: 'Symetra' }).locator('span').nth(1).click();
  24 |   await page.getByRole('button', { name: 'Save', exact: true }).click();
  25 |   await page.getByRole('button', { name: 'New Account Contact Relation' }).click();
  26 |   await page.getByRole('combobox', { name: 'Account *' }).click();
  27 |   await page.getByRole('combobox', { name: 'Account *' }).fill('symetra');
  28 |   await page.getByText('"symetra" in Accounts').click();
  29 |   await page.getByRole('link', { name: 'Symetra', exact: true }).click();
> 30 |   await page.locator('dl').filter({ hasText: 'Role*--None--' }).getByRole('combobox').click();
     |                                                                                       ^ Error: locator.click: Test timeout of 30000ms exceeded.
  31 |   await page.getByRole('option', { name: 'Sales Team' }).click();
  32 |   await page.getByRole('button', { name: 'Save' }).click();
  33 |   
  34 |   
  35 |   /* console.log('ðŸ”„ Refreshing the page...');
  36 |   await page.evaluate(() => location.reload());
  37 |     console.log('âœ… Page refreshed successfully!');
  38 | await page.getByText('Test C. - Sales Team, Symetra', { exact: true }).click();
  39 |   await page.getByRole('button', { name: 'Provide Portal Access' }).click();
  40 |   await page.getByRole('button', { name: 'Confirm' }).click();
  41 |   await page.getByRole('button', { name: 'Cancel and close' }).click();
  42 |   await page.getByRole('button', { name: 'Cancel and close' }).click();  */
  43 | });
```