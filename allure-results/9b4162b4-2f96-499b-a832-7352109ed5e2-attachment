# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: YouTube search for "Playwright by testers"
- Location: /Users/pejin/Documents/Playwright QA/tests/test-2.spec.ts:14:5

# Error details

```
Error: Timed out 5000ms waiting for expect(locator).toBeEmpty()

Locator: getByPlaceholder('Search', { exact: true }).first()
Expected: empty
Received: notEmpty
Call log:
  - expect.toBeEmpty with timeout 5000ms
  - waiting for getByPlaceholder('Search', { exact: true }).first()
    9 × locator resolved to <input type="text" role="combobox" autocorrect="off" aria-controls="i0" autocomplete="off" name="search_query" aria-expanded="true" placeholder="Search" aria-autocomplete="list" class="ytSearchboxComponentInput yt-searchbox-input title"/>
      - unexpected value "notEmpty"

    at /Users/pejin/Documents/Playwright QA/tests/test-2.spec.ts:50:26
```

# Test source

```ts
   1 | /* import { test, expect} from '@playwright/test';
   2 | test ( 'testing', async ({ page})=>{
   3 |     await page.goto('https://www.youtube.com/');
   4 |    await page.getByRole('button', { name: 'Reject the use of cookies and' }).click();
   5 |    await page.getByRole('combobox', { name: 'Search' }).fill('playwright by testers');
   6 |    await page.waitForTimeout(500);
   7 |    await page.getByRole('combobox', { name: 'Search' }).press('Enter');
   8 |    await page.getByRole('link', { name: 'Playwright by Testers Talk☑️' }).click();
   9 | });
  10 |  */
  11 |
  12 | import { test, expect } from '@playwright/test';
  13 |
  14 | test('YouTube search for "Playwright by testers"', async ({ page }) => {
  15 |   await page.goto('https://www.youtube.com/');
  16 |
  17 |   // Dismiss cookie banner if present
  18 |   const rejectCookies = page.getByRole('button', { name: /Reject the use of cookies/i });
  19 |   if (await rejectCookies.isVisible()) {
  20 |     await rejectCookies.click();
  21 |   }
  22 |
  23 |   // Search input
  24 |   /* const searchInput = page.getByRole('combobox', { name: /Search/i });
  25 |   await searchInput.waitFor({ state: 'visible' });
  26 |   await searchInput.fill('playwright by testers');
  27 |   await page.waitForTimeout(500); */
  28 |   // 🔍 Click the Search button instead of pressing Enter
  29 |   /* const searchButton = page.getByRole('button', { name: /Search/i });
  30 |   await searchButton.click(); */
  31 |   //await searchInput.press('Enter');
  32 |   await page.getByPlaceholder('Search').fill('playwright by testers');
  33 |   await page.waitForTimeout(500);
  34 |
  35 |   const mySearch = page.getByPlaceholder('Search', { exact: true}).first()
  36 |   await expect(mySearch).toBeVisible();
  37 |   console.log('✅ It is visible!');
  38 |
  39 |   await expect(mySearch).toBeEditable();
  40 |   console.log('✅ It is editable!');
  41 |
  42 |   await expect(mySearch).toBeEnabled();
  43 |   console.log('✅ It is enabled!');
  44 |
  45 |   await expect(mySearch).toHaveAttribute('placeholder', 'Search');
  46 |   console.log('✅ It has "Search" placeholder!');
  47 |   await expect(mySearch).toHaveValue('playwright by testers');
  48 |   console.log('✅ It has "playwright by testers" value!');
  49 |
> 50 |   await expect(mySearch).toBeEmpty();
     |                          ^ Error: Timed out 5000ms waiting for expect(locator).toBeEmpty()
  51 |   console.log('✅ It is empty!');
  52 |     await page.getByPlaceholder('Search').press('Enter');
  53 |     
  54 |
  55 |
  56 |   const videoLink = page.getByRole('link', { name: /Playwright by Testers Talk/i });
  57 |   await page.waitForTimeout(1000);
  58 |   await videoLink.click(); 
  59 |
  60 |   //await expect(page).toHaveURL(/watch/);
  61 |   //await expect(page.getByRole('heading', { name: 'Playwright Tutorial Full Course 2024 | Playwright Testing Tutorial', exact: true }).locator('yt-formatted-string')).toContainText('Playwright');
  62 |   //await expect(page).toHaveTitle('Playwright Tutorial Full Course 2024 | Playwright Testing Tutorial');
  63 |   await page.waitForTimeout(1000);
  64 |   /* const signIn = page.getByRole('link', { name: 'Sign in' });
  65 |   await signIn.click(); */
  66 |   await page.getByText('Open panel').first().click();
  67 |   await page.waitForTimeout(2000);
  68 |  
  69 |   
  70 |   const title = page.locator('#title yt-formatted-string').first();
  71 | await expect(title).toHaveText(/Playwright Tutorial Full Course 2024 | Playwright Testing Tutorial/i, { timeout: 10000 });
  72 | console.log('🎬 Title:', (await title.textContent())?.trim());
  73 |   
  74 |
  75 | console.log('✅ Title became visible');
  76 | console.log('✅ Video title is visible!');
  77 |
  78 |   await  page.goto('https://github.com/');
  79 |   await page.getByRole('link', { name: 'Sign in' }).click();
  80 |   await page.waitForTimeout(2000);
  81 |   await page.getByLabel('Homepage', { exact: true}).click();
  82 |   await page.getByText('Learn more').first().click();
  83 |   //await page.getByRole('link', { name: 'Sign in' }).click();
  84 |   await page.getByText('Sign up').first().click();
  85 |   
  86 |   console.log('✅ Test passed');
  87 | });
```