# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Shopping only Primary
- Location: /Users/pejin/Documents/Playwright new/tests/ansel_shopping/ansel_family.spec.ts:4:5

# Error details

```
Error: locator.click: Error: strict mode violation: locator('.visible.menu.transition div[role="option"]').filter({ hasText: 'Male' }) resolved to 2 elements:
    1) <div role="option" aria-checked="false" aria-selected="true" class="selected item">â€¦</div> aka getByRole('option', { name: 'Female' })
    2) <div class="item" role="option" aria-checked="false" aria-selected="false">â€¦</div> aka getByRole('option', { name: 'Male', exact: true })

Call log:
  - waiting for locator('.visible.menu.transition div[role="option"]').filter({ hasText: 'Male' })

    at /Users/pejin/Documents/Playwright new/tests/ansel_shopping/ansel_family.spec.ts:210:95
```

# Test source

```ts
  110 | await newPage.waitForTimeout(1000);
  111 |
  112 |
  113 |   await newPage.getByRole('button', { name: 'Next step' }).click();
  114 |   await newPage.waitForTimeout(1000);
  115 |
  116 |   await newPage.getByRole('button', { name: 'Next step' }).click();
  117 |
  118 |   
  119 |   for (let i = 0; i < 10; i++) {
  120 |     await page.mouse.wheel(0, 400);
  121 |     await page.waitForTimeout(100);
  122 |   }
  123 |   await newPage.waitForTimeout(2000);
  124 |   await newPage.getByRole('listbox').filter({ hasText: 'FemaleMale' }).click();
  125 |
  126 |   await newPage.waitForTimeout(1000);
  127 |
  128 | // Generate a random 9-digit phone number
  129 | const random9Digits = Math.floor(100000000 + Math.random() * 900000000);
  130 |
  131 | // Format it properly like (XXX) XXX-XXXX
  132 | const formattedPhone = `(${String(random9Digits).slice(0, 3)}) ${String(random9Digits).slice(3, 6)}-${String(random9Digits).slice(6)}`;
  133 |
  134 | await newPage.getByRole('textbox', { name: '(XXX) XXX-XXXX' }).type(formattedPhone, { delay: 100 });
  135 | console.log(`ðŸ“± Filled formatted phone number: ${formattedPhone}`);  
  136 | await newPage.waitForTimeout(1000);
  137 |
  138 | await newPage.getByRole('listbox').filter({ hasText: 'MobileStandard' }).click();
  139 |   await newPage.locator('input[name="SET_STREET_ADDRESS"]').fill('123 Main St');
  140 |   await newPage.waitForTimeout(1000);
  141 |
  142 |   await newPage.locator('input[name="SET_ZIP_CODE"]').fill('12345');
  143 |   await newPage.locator('input[name="SET_CITY"]').fill('Random City');
  144 |
  145 |
  146 | // ------------- SPOUSE (Jane) ---------------
  147 | await newPage.getByRole('button', { name: '+ Add dependent' }).click();
  148 | await newPage.getByRole('listbox').filter({ hasText: 'SpouseChildDomestic' }).click();
  149 | await newPage.getByRole('option', { name: 'Spouse' }).click();
  150 | await newPage.waitForTimeout(500);
  151 |
  152 | await newPage.locator('input[name="firstName"]').fill('Jane');
  153 | await newPage.locator('input[name="lastName"]').fill('Doe');
  154 |
  155 | // Open the gender dropdown
  156 | await newPage.getByRole('listbox').filter({ hasText: /^FemaleMale$/ }).click();
  157 |
  158 | // Wait for dropdown options
  159 | await Promise.any([
  160 |   newPage.getByRole('option', { name: 'Male' }).waitFor({ state: 'visible' }),
  161 |   newPage.getByRole('option', { name: 'Female' }).waitFor({ state: 'visible' }),
  162 | ]);
  163 |
  164 | // Random pick
  165 | const gender = Math.random() > 0.5 ? 'Male' : 'Female';
  166 | console.log(`ðŸŽ¯ Will try to select gender: ${gender}`);
  167 |
  168 | // Select it
  169 | await newPage.getByRole('option', { name: gender }).click();
  170 |
  171 | console.log(`âœ… Selected gender: ${gender}`);
  172 |
  173 | // DOB
  174 | await newPage.locator('input[name="birthdate"]').fill('01/01/2004');
  175 |
  176 | // SSN
  177 | function generateRandomSSN() {
  178 |   const part1 = Math.floor(100 + Math.random() * 400);
  179 |   const part2 = Math.floor(10 + Math.random() * 90);
  180 |   const part3 = Math.floor(1000 + Math.random() * 9000);
  181 |   return `${part1}-${part2}-${part3}`;
  182 | }
  183 | const randomSSN = generateRandomSSN();
  184 | await newPage.getByRole('textbox', { name: 'XXX-XX-XXXX' }).fill(randomSSN);
  185 | console.log(`âœ… SSN for Jane: ${randomSSN}`);
  186 |
  187 | await newPage.getByRole('button', { name: 'Save' }).click();
  188 |
  189 | // Scroll down
  190 | for (let i = 0; i < 10; i++) {
  191 |   await page.mouse.wheel(0, 400);
  192 |   await page.waitForTimeout(100);
  193 | }
  194 |
  195 | // ------------- CHILD (Mark) ---------------
  196 | await newPage.getByRole('button', { name: '+ Add dependent' }).click();
  197 | await newPage.waitForTimeout(500);
  198 |
  199 | await newPage.getByRole('listbox').filter({ hasText: 'Child' }).click();
  200 | await newPage.getByRole('option', { name: 'Child' }).click();
  201 | await newPage.waitForTimeout(500);
  202 |
  203 | await newPage.locator('input[name="firstName"]').fill('Mark');
  204 | await newPage.locator('input[name="lastName"]').fill('Smith');
  205 |
  206 | // Select Gender for Mark
  207 | await newPage.getByRole('listbox').filter({ hasText: /^FemaleMale$/ }).click();
  208 | await newPage.waitForSelector('.visible.menu.transition');
  209 | const genderMark = Math.random() > 0.5 ? 'Male' : 'Female';
> 210 | await newPage.locator('.visible.menu.transition div[role="option"]', { hasText: genderMark }).click();
      |                                                                                               ^ Error: locator.click: Error: strict mode violation: locator('.visible.menu.transition div[role="option"]').filter({ hasText: 'Male' }) resolved to 2 elements:
  211 | console.log(`âœ… Gender selected for Mark: ${genderMark}`);
  212 |
  213 | // DOB
  214 | await newPage.locator('input[name="birthdate"]').fill('01/01/2004');
  215 |
  216 | // SSN for Mark
  217 | const randomSSN1 = generateRandomSSN();
  218 | await newPage.getByRole('textbox', { name: 'XXX-XX-XXXX' }).fill(randomSSN1);
  219 | console.log(`âœ… SSN for Mark: ${randomSSN1}`);
  220 |
  221 | // Save dependent
  222 | await newPage.getByRole('button', { name: 'Next step' }).click();
  223 | console.log('ðŸ“¬ Contact info filled');
  224 |
  225 | // PASSWORDS
  226 | await newPage.locator('input[name="password"]').fill('Demo123456');
  227 | await newPage.locator('input[name="confirmPassword"]').fill('Demo123456');
  228 | await newPage.evaluate(() => {
  229 |   const cb = document.querySelector('input[name="agreeToTerms"]');
  230 |   if (cb) cb.removeAttribute('readonly');
  231 |   (cb as HTMLInputElement)?.click();
  232 | });
  233 |
  234 |
  235 |   // Done!
  236 |   console.log('âœ… Flow completed to this point.'); 
  237 |   for (let i = 0; i < 10; i++) await page.mouse.wheel(0, 200);
  238 |   await newPage.getByRole('button', { name: 'Submit' }).click();
  239 |   console.log(' Final step complete, Shopping Finished');
  240 |
  241 | });
```