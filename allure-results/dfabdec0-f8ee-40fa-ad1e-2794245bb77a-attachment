# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: YouTube search for "Playwright by testers"
- Location: /Users/pejin/Documents/Playwright QA/tests/test-2.spec.ts:14:5

# Error details

```
Error: Timed out 5000ms waiting for expect(locator).toHaveTitle(expected)

Locator: locator(':root')
Expected string: "Playwright Tutorial Full Course"
Received string: "Playwright Tutorial Full Course 2024 | Playwright Testing Tutorial - YouTube"
Call log:
  - expect.toHaveTitle with timeout 5000ms
  - waiting for locator(':root')
    8 × locator resolved to <html lang="en" refresh="" typography="" system-icons="" darker-dark-theme="" typography-spacing="" darker-dark-theme-deprecate="">…</html>
      - unexpected value "Playwright Tutorial Full Course 2024 | Playwright Testing Tutorial - YouTube"

    at /Users/pejin/Documents/Playwright QA/tests/test-2.spec.ts:43:22
```

# Test source

```ts
   1 | /* import { test, expect} from '@playwright/test';
   2 | test ( 'testing', async ({ page})=>{
   3 |     await page.goto('https://www.youtube.com/');
   4 |    await page.getByRole('button', { name: 'Reject the use of cookies and' }).click();
   5 |    await page.getByRole('combobox', { name: 'Search' }).fill('playwright by testers');
   6 |    await page.waitForTimeout(500);
   7 |    await page.getByRole('combobox', { name: 'Search' }).press('Enter');
   8 |    await page.getByRole('link', { name: 'Playwright by Testers Talk☑️' }).click();
   9 | });
  10 |  */
  11 |
  12 | import { test, expect } from '@playwright/test';
  13 |
  14 | test('YouTube search for "Playwright by testers"', async ({ page }) => {
  15 |   await page.goto('https://www.youtube.com/');
  16 |
  17 |   // Dismiss cookie banner if present
  18 |   const rejectCookies = page.getByRole('button', { name: /Reject the use of cookies/i });
  19 |   if (await rejectCookies.isVisible()) {
  20 |     await rejectCookies.click();
  21 |   }
  22 |
  23 |   // Search input
  24 |   const searchInput = page.getByRole('combobox', { name: /Search/i });
  25 |   await searchInput.waitFor({ state: 'visible' });
  26 |   await searchInput.fill('playwright by testers');
  27 |   await page.waitForTimeout(500);
  28 |   // 🔍 Click the Search button instead of pressing Enter
  29 |   /* const searchButton = page.getByRole('button', { name: /Search/i });
  30 |   await searchButton.click(); */
  31 |   await searchInput.press('Enter');
  32 |
  33 |
  34 |   // Wait for results to appear
  35 |   await expect(page).toHaveURL(/results/);
  36 |
  37 |   const videoLink = page.getByRole('link', { name: /Playwright by Testers Talk/i });
  38 |   await videoLink.waitFor({ state: 'visible', timeout: 10000 });
  39 |   await videoLink.click();
  40 |
  41 |   await expect(page).toHaveURL(/watch/);
  42 |   await expect(page.getByRole('heading', { name: 'Playwright Tutorial Full Course 2024 | Playwright Testing Tutorial', exact: true }).locator('yt-formatted-string')).toContainText('Playwright');
> 43 |   await expect(page).toHaveTitle('Playwright Tutorial Full Course');
     |                      ^ Error: Timed out 5000ms waiting for expect(locator).toHaveTitle(expected)
  44 |   await expect(page).toHaveTitle('Playwright Testing Tutorial');
  45 |   console.log('2024 | Playwright Testing Tutorial');
  46 |   console.log('✅ Test passed');
  47 | });
```