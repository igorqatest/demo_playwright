# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Shopping only Primary
- Location: /Users/pejin/Documents/Playwright new/tests/ansel_shopping/ansel_spouse.spec.ts:4:5

# Error details

```
Error: locator.fill: Test timeout of 120000ms exceeded.
Call log:
  - waiting for locator('input[name="password"]')

    at /Users/pejin/Documents/Playwright new/tests/ansel_shopping/ansel_spouse.spec.ts:174:51
```

# Test source

```ts
   74 |   await newPage.getByRole('textbox', { name: 'MM/DD/YYYY' }).fill(dob);
   75 |   await newPage.getByRole('textbox', { name: 'XXX-XX-XXXX' }).fill(ssn);
   76 |   await newPage.getByRole('button', { name: 'Next step' }).click();
   77 |   console.log('🔓 Verification passed');
   78 |
   79 |   await newPage.getByRole('button', { name: 'Next step' }).click();
   80 |
   81 |   // ✅ Ensure fresh continuation from the correct start page
   82 |
   83 |    // Select "No" for married, and "I'm not a parent"
   84 |    await newPage.getByText('Yes', { exact: true }).click();
   85 |   for (let i = 0; i < 10; i++) await page.mouse.wheel(0, 60);
   86 |
   87 |   await newPage.getByText('I\'m not a parent').click();
   88 |   await newPage.getByRole('button', { name: 'Next step' }).click();
   89 |   console.log('👪 Household questions');
   90 |
   91 |   // ⏭ Continue steps
   92 |   for (let i = 1; i <= 8; i++) {
   93 |     await newPage.getByRole('button', { name: 'Next step' }).click();
   94 |     console.log(`➡️ Page ${i + 2} complete`);
   95 |   }
   96 |    // Let's talk about medical expenses
   97 |   await newPage.getByText('Yes').click();
   98 |   await newPage.getByText('I typically pay the full cost').click();
   99 |   await newPage.getByRole('button', { name: 'Next step' }).click();
  100 |   console.log('💰 Medical expenses questions');
  101 |
  102 |   // We'll keep your budget in mind
  103 |   await newPage.getByText('I can purchase what I want').click();
  104 |     await newPage.getByRole('button', { name: 'Next step' }).click();
  105 |     console.log('✅ Purchasing what I want');
  106 |
  107 |
  108 | // Select Ansel benefits
  109 |   await newPage.getByRole('button', { name: 'Next step' }).click();
  110 |
  111 |     await newPage.getByRole('button', { name: 'Next step' }).click();
  112 |
  113 | await newPage.getByText('My spouse and me').click();
  114 |
  115 | console.log('✅ Select ansel benefits');
  116 |
  117 |   await newPage.getByRole('button', { name: 'Next step' }).click();
  118 |   await newPage.getByRole('button', { name: 'Next step' }).click();
  119 |
  120 |   await newPage.waitForTimeout(1000);
  121 |   await newPage.getByRole('listbox').filter({ hasText: 'FemaleMale' }).click();
  122 | // Generate a random 10-digit phone number
  123 | await newPage.waitForTimeout(1000);
  124 | const randomPhone = `9${Math.floor(100000000 + Math.random() * 900000000)}`;
  125 |
  126 | await newPage.getByRole('textbox', { name: '(XXX) XXX-XXXX' }).fill(randomPhone);
  127 | console.log(`📱 Filled random phone number: ${randomPhone}`);  
  128 |
  129 | await newPage.getByRole('listbox').filter({ hasText: 'MobileStandard' }).click();
  130 |   await newPage.locator('input[name="SET_STREET_ADDRESS"]').fill('123 Main St');
  131 |   await newPage.locator('input[name="SET_ZIP_CODE"]').fill('12345');
  132 |   await newPage.locator('input[name="SET_CITY"]').fill('Random City');
  133 |
  134 |   // Add spouse
  135 |   await newPage.getByRole('button', { name: '+ Add dependent' }).click();
  136 |   await newPage.getByRole('listbox').filter({ hasText: 'SpouseChildDomestic' }).click();
  137 |   // Then select the 'Spouse' option
  138 | await newPage.getByRole('option', { name: 'Spouse' }).click();
  139 | await newPage.locator('input[name="firstName"]').fill('Jane');
  140 | await newPage.locator('input[name="lastName"]').fill('Doe');
  141 | // Open the gender dropdown
  142 | await newPage.waitForTimeout(1000);
  143 | await newPage.getByRole('listbox').filter({ hasText: /^FemaleMale$/ }).click();
  144 |
  145 | // Pick a random gender
  146 | const gender = Math.random() > 0.5 ? 'Male' : 'Female';
  147 |
  148 | // Select the gender option
  149 | await newPage.getByRole('option', { name: gender }).click();
  150 |
  151 | console.log(`✅ Selected gender: ${gender}`);
  152 |
  153 | // Select date of birth
  154 | await newPage.locator('input[name="birthdate"]').fill('01/01/2004');
  155 |
  156 |   // SSN
  157 | // Helper to generate random SSN
  158 | function generateRandomSSN() {
  159 |     const part1 = Math.floor(100 + Math.random() * 900); // 3 digits
  160 |     const part2 = Math.floor(10 + Math.random() * 90);   // 2 digits
  161 |     const part3 = Math.floor(1000 + Math.random() * 9000); // 4 digits
  162 |     return `${part1}-${part2}-${part3}`;
  163 |   }
  164 |   
  165 |   // Then fill it
  166 |   const randomSSN = generateRandomSSN();
  167 |
  168 |
  169 |   await newPage.getByRole('button', { name: 'Save' }).click();
  170 |
  171 |   await newPage.getByRole('button', { name: 'Next step' }).click();
  172 |   console.log('📬 Contact info filled');
  173 |
> 174 |   await newPage.locator('input[name="password"]').fill('Demo123456');
      |                                                   ^ Error: locator.fill: Test timeout of 120000ms exceeded.
  175 |   await newPage.locator('input[name="confirmPassword"]').fill('Demo123456');
  176 |   await newPage.evaluate(() => {
  177 |     const cb = document.querySelector('input[name="agreeToTerms"]');
  178 |     if (cb) cb.removeAttribute('readonly');
  179 |     (cb as HTMLInputElement)?.click();
  180 |   });
  181 |
  182 |
  183 |   // Done!
  184 |   console.log('✅ Flow completed to this point.'); 
  185 |   for (let i = 0; i < 10; i++) await page.mouse.wheel(0, 200);
  186 |   await newPage.getByRole('button', { name: 'Submit' }).click();
  187 |   console.log('🔐 Final step complete');
  188 |
  189 | });
```