# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: test
- Location: /Users/pejin/Documents/Playwright QA/tests/test-40.spec.ts:25:5

# Error details

```
Error: locator.click: Test ended.
Call log:
  - waiting for getByRole('option', { name: 'Service', exact: true })

    at /Users/pejin/Documents/Playwright QA/tests/test-40.spec.ts:35:68
```

# Test source

```ts
   1 | import { test, expect } from '@playwright/test';
   2 | import fs from 'fs';
   3 | import path from 'path';
   4 |
   5 | const screenshotDir = '40-test';
   6 |
   7 | if ( fs.existsSync(screenshotDir)) {
   8 |   fs.readdirSync(screenshotDir).forEach(file => {
   9 |     fs.unlinkSync(path.join(screenshotDir, file));
   10 |   });
   11 | }else {
   12 |   fs.mkdirSync(screenshotDir);
   13 | }
   14 | /* async function logAndScreenshot(page, dir: string, step: string, message: string) {
   15 |   console.log(message);
   16 |   await page.screenshot({ path: `${dir}/${step}.png`});
   17 | } */
   18 |  async function logAndScreenshot(page, dir: string, step: string, message: string) {
   19 |   console.log(message);
   20 |   await page.screenshot({ path: `${dir}/${step}.png`});
   21 |  }
   22 |
   23 |
   24 |
   25 | test('test', async ({ page }) => {
   26 |   await page.goto('https://ansel2-dev-ed.develop.lightning.force.com/lightning/r/Contact/003WU00000KMzEZYA1/view');
   27 |   await page.getByRole('textbox', { name: 'Username'}).fill('pejinigor@gmail.com');
   28 |   await page.getByRole('textbox', { name: 'Password'}).fill('Test123456');
   29 |   await logAndScreenshot(page, screenshotDir, '40-test', 'Login page loaded');
   30 |   await page.getByRole('button', { name: 'Log in'}).click();
   31 |   await page.waitForTimeout(1000);
   32 |   await page.getByRole('button', { name: 'App Launcher' }).click();
   33 |   await logAndScreenshot(page, screenshotDir, '40-test', 'App Launcher loaded');
   34 |
>  35 |   await page.getByRole('option', { name: 'Service', exact: true }).click();
      |                                                                    ^ Error: locator.click: Test ended.
   36 |
   37 |   await page.getByRole('link', { name: 'Accounts' }).click();
   38 |   await page.getByRole('link', { name: 'Dickenson plc', exact: true }).click();
   39 |   await page.waitForTimeout(2000);
   40 |   await logAndScreenshot(page, screenshotDir, '40-test', 'Dickenson plc loaded');
   41 | }); 
   42 |
   43 |
   44 |
   45 | /* import fs from 'fs';
   46 | import path from 'path';
   47 |
   48 | import { test, expect } from '@playwright/test';
   49 |
   50 | const screenshotDir = 'test-40';
   51 |
   52 |
   53 | if ( fs.existsSync(screenshotDir)) {
   54 |   fs.readdirSync(screenshotDir).forEach(test => {
   55 |     fs.unlinkSync(path.join(screenshotDir, test));
   56 |   });
   57 | }else {
   58 |   fs.mkdirSync(screenshotDir);
   59 | }
   60 |
   61 |
   62 | async function logAndScreenshot(page, dir: string, step: string, message: string) {
   63 |   console.log(message);
   64 |   await page.screenshot({ path: `${dir}/${step}.png`});
   65 | }
   66 |
   67 | test('🔐 Login and navigate to Dickenson plc Account record', async ({ page }) => {
   68 |   await test.step('🌐 Navigate to Salesforce login page', async () => {
   69 |     await page.goto('https://ansel2-dev-ed.develop.lightning.force.com/lightning/r/Contact/003WU00000KMzEZYA1/view');
   70 |   });
   71 |
   72 |   await test.step('🔑 Log into Salesforce', async () => {
   73 |     await page.getByRole('textbox', { name: 'Username' }).fill('pejinigor@gmail.com');
   74 |     await page.getByRole('textbox', { name: 'Password' }).fill('Test123456');
   75 |     //  await logAndScreenshot(page, screenshotDir, '1-login', '📸 Login page loaded');
   76 | await logAndScreenshot(page, screenshotDir, '40-login', ' Login page loaded');
   77 |     await page.getByRole('button', { name: 'Log in' }).click();
   78 |
   79 |     // Wait for homepage to load
   80 |     await expect(page.getByRole('button', { name: 'App Launcher' })).toBeVisible();
   81 |   });
   82 |   await test.step('🧭 Open Service App from App Launcher', async () => {
   83 |     await page.getByRole('button', { name: 'App Launcher' }).click();
   84 |
   85 |     const service = page.getByRole('option', { name: 'Service', exact: true });
   86 |     
   87 |     await expect(service).toBeVisible();   await logAndScreenshot(page, screenshotDir, '40-Service', ' Service loaded');
   88 |
   89 |     await service.click();
   90 |
   91 |     });
   92 |
   93 |   await test.step('🏢 Navigate to Accounts > Dickenson plc', async () => {
   94 |     await page.getByRole('link', { name: 'Accounts' }).click();
   95 |     await logAndScreenshot(page, screenshotDir, '40-Accounts', 'Accounts loaded');
   96 |     await page.waitForTimeout(3000);
   97 |
   98 |     const dickenson = page.getByRole('link', { name: 'Dickenson plc', exact: true });
   99 |     await expect(dickenson).toBeVisible();
  100 |     await dickenson.click();
  101 |   });
  102 |
  103 |   console.log('✅ Navigation to Dickenson plc complete.');
  104 | }); */
```