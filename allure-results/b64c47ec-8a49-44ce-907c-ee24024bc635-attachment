# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: My first test
- Location: /Users/pejin/Documents/Playwright new/tests/aig/claim_aig_bank_account.spec.ts:4:5

# Error details

```
Error: locator.click: Test timeout of 120000ms exceeded.
Call log:
  - waiting for getByRole('button', { name: 'All done' })

    at /Users/pejin/Documents/Playwright new/tests/aig/claim_aig_bank_account.spec.ts:101:54
```

# Test source

```ts
   1 | import { test, expect } from '@playwright/test';
   2 | import { config } from '../reusable';
   3 |
   4 | test('My first test', async ({ page }) => {
   5 |     test.setTimeout(120_000);
   6 |   console.log('✅ Navigating to Member Portal...');
   7 |   await page.goto(config.urlMemberAIG, { waitUntil: 'domcontentloaded' });
   8 |
   9 |   console.log('✅ Filling in Login form...');
   10 |   const emailInput = page.getByRole('textbox', { name: 'Enter your email' });
   11 |   await emailInput.type(config.userMemberAIG, { delay: 10 });
   12 |
   13 |   const passwordInput = page.locator('input[name="password"]');
   14 |   await passwordInput.type(config.passwordMemberAIG, { delay: 10 });
   15 |
   16 |   await page.getByRole('button', { name: 'Sign in' }).click();
   17 |
   18 |   console.log('✅ Waiting for Dashboard to load...');
   19 |   await page.waitForTimeout(15000); // Adjust the timeout as needed
   20 |
   21 |    // 1. Click "File new claim"
   22 | await page.getByRole('button', { name: 'File new claim' }).click();
   23 | console.log('✅ Clicked "File new claim"');
   24 |
   25 | // 2. Wait until the dropdown menu with options becomes visible
   26 | const dropdownMenu = page.locator('div.menu.transition.visible');
   27 | //await dropdownMenu.waitFor({ state: 'visible' });
   28 | console.log('✅ Dropdown menu is now visible');
   29 |
   30 | // 3. Locate the option containing "Primary"
   31 | const primaryOption = dropdownMenu.getByRole('option', { name: /Primary/i });
   32 |
   33 | // 4. Wait for the option to be visible
   34 | //await expect(primaryOption).toBeVisible();
   35 | console.log('✅ Primary member option is visible');
   36 |
   37 | // 5. Click on the "Primary" option
   38 | //await primaryOption.click();
   39 | //console.log('✅ Successfully clicked "Primary" member');
   40 |
   41 |
   42 |   await page.getByRole('button', { name: 'Next step' }).click();
   43 |
   44 |   await page.locator('textarea[name="symptoms"]').fill('test');
   45 |   await page.locator('textarea[name="providerDiagnosis"]').fill('test');
   46 |   await page.locator('textarea[name="treatment"]').fill('test');
   47 |   await page.locator('textarea[name="additionalInfo"]').fill('test');
   48 |   await page.waitForTimeout(1000);
   49 |   await page.getByRole('button', { name: 'Next step' }).click();
   50 |
   51 |
   52 |   await page.getByText('Emergency room').click();
   53 |   for (let i = 0; i < 10; i++) {
   54 |     await page.mouse.wheel(0, 200);
   55 |     await page.waitForTimeout(100);
   56 |   }
   57 | // 1. Type into the hospital field
   58 | await page.locator('input.prompt').fill('Hospital');
   59 |
   60 | // 2. Wait for the suggestions to appear
   61 | await page.waitForSelector('.results.visible .result');
   62 |
   63 | // 3. Click the first suggestion
   64 | await page.locator('.results.visible .result').first().click();
   65 |
   66 | console.log('✅ Successfully clicked the first hospital!');
   67 | //Tell us where you were treated
   68 | await page.getByRole('button', { name: 'Next step' }).click();
   69 | //Let´s prepare your documents
   70 | await page.getByRole('button', { name: 'Next step' }).click();
   71 | // Upload your pictures
   72 | await page.getByRole('button', { name: 'Next step' }).click();
   73 | // Confirm uploads
   74 | await page.getByRole('button', { name: 'Next step' }).click();
   75 | // Payment preference
   76 | for (let i = 0; i < 10; i++) {
   77 |     await page.mouse.wheel(0, 200);
   78 |     await page.waitForTimeout(100);
   79 |   }
   80 |   await page.getByRole('button', { name: '+Add payment method' }).click();
   81 |   await page.getByRole('row', { name: 'Bank account Configure' }).getByRole('button').click();
   82 |   await page.locator('input[name="firstName"]').fill('John');
   83 |   await page.locator('input[name="lastName"]').fill('Doe');
   84 |   await page.getByRole('textbox', { name: 'XXXXXXXXX' }).fill('110000000');
   85 |   await page.locator('input[name="accountNumber"]').fill('000123456789');
   86 |   await page.getByRole('button', { name: 'Submit' }).click();
   87 | await page.waitForTimeout(4000);
   88 | await page.getByRole('button', { name: 'Next step' }).click();
   89 |
   90 | for (let i = 0; i < 10; i++) {
   91 |     await page.mouse.wheel(0, 400);
   92 |     await page.waitForTimeout(100);
   93 |   }
   94 |  await page.locator('label').first().click();
   95 |
   96 |  // Click Submit
   97 | //await page.getByRole('button', { name: 'Submit' }).click();
   98 | console.log('✅ Clicked Submit button');
   99 |
  100 | // Freshly find the "All done" button
> 101 | await page.getByRole('button', { name: 'All done' }).click();
      |                                                      ^ Error: locator.click: Test timeout of 120000ms exceeded.
  102 | console.log('✅ Successfully clicked "All done" button');
  103 |  
  104 | });
```