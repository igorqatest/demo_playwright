# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Verify all fields and buttons are present in Contacts list view
- Location: /Users/pejin/Documents/Playwright QA/tests/test-33.spec.ts:3:5

# Error details

```
Error: expect.toBeVisible: Error: strict mode violation: locator('text=Name') resolved to 37 elements:
    1) <span role="status" aria-live="polite" aria-label="All Contacts" class="countSortedByFilteredBy">20 items ‚Ä¢ Sorted by Name ‚Ä¢ Filtered by All conta‚Ä¶</span> aka getByRole('status', { name: 'All Contacts' })
    2) <span title="Name" class="slds-truncate" data-aura-rendered-by="44:665;a">Name</span> aka getByRole('button', { name: 'Sort Name' })
    3) <span class="slds-assistive-text" data-aura-rendered-by="1050:0">Show Name Column Actions</span> aka getByRole('button', { name: 'Show Name Column Actions' })
    4) <span title="Account Name" class="slds-truncate" data-aura-rendered-by="61:665;a">Account Name</span> aka getByRole('button', { name: 'Sort Account Name' })
    5) <span class="slds-assistive-text" data-aura-rendered-by="1068:0">Show Account Name Column Actions</span> aka getByRole('button', { name: 'Show Account Name Column' })
    6) <span class="slds-assistive-text" data-aura-rendered-by="1354:0">Locked Name: Item Andy Young</span> aka getByText('Locked Name: Item Andy Young')
    7) <span class="slds-assistive-text" data-aura-rendered-by="1356:0">Edit Account Name: Item </span> aka getByRole('gridcell', { name: 'Dickenson plc' }).locator('span').nth(3)
    8) <span class="slds-assistive-text" data-aura-rendered-by="1354:0">Locked Name: Item Arthur Song</span> aka getByText('Locked Name: Item Arthur Song')
    9) <span class="slds-assistive-text" data-aura-rendered-by="1356:0">Edit Account Name: Item </span> aka locator('tr:nth-child(2) > td:nth-child(4) > .slds-grid > .triggerContainer > .slds-button > .slds-assistive-text')
    10) <span class="slds-assistive-text" data-aura-rendered-by="1354:0">Locked Name: Item Ashley James</span> aka getByText('Locked Name: Item Ashley James')
    ...

Call log:
  - expect.toBeVisible with timeout 5000ms
  - waiting for locator('text=Name')

    at /Users/pejin/Documents/Playwright QA/tests/test-33.spec.ts:17:43
```

# Test source

```ts
   1 | import { test, expect } from '@playwright/test';
   2 |
   3 | test('Verify all fields and buttons are present in Contacts list view', async ({ page }) => {
   4 |   // Go to your Salesforce Contacts page
   5 |   await page.goto('https://ansel2-dev-ed.develop.lightning.force.com/lightning/o/Contact/list?filterName=00BWU00000QUsgp2AD'); // <-- Replace with actual URL
   6 |
   7 |   console.log('Filling in username...');
   8 |   await page.getByRole('textbox', { name: 'Username' }).fill('pejinigor@gmail.com');
   9 |   await page.getByRole('textbox', { name: 'Password' }).fill('Test123456');
  10 |
  11 |   console.log('Clicking Log In...');
  12 |   await page.getByRole('button', { name: 'Log In' }).click();
  13 |   // Wait for the page to load
  14 |   await page.waitForLoadState('domcontentloaded');
  15 |  await page.waitForTimeout(1500);
  16 |   // üîç Table column headers
> 17 |   await expect(page.locator('text=Name')).toBeVisible();
     |                                           ^ Error: expect.toBeVisible: Error: strict mode violation: locator('text=Name') resolved to 37 elements:
  18 | await expect(page.locator('text=Account Name')).toBeVisible();
  19 | await expect(page.locator('text=Title')).toBeVisible();
  20 | await expect(page.locator('text=Phone')).toBeVisible();
  21 | await expect(page.locator('text=Email')).toBeVisible();
  22 | await expect(page.locator('text=Contact Owner Alias')).toBeVisible();
  23 |
  24 |   // üîò Top action buttons
  25 |   await expect(page.getByRole('button', { name: 'New' })).toBeVisible();
  26 |   await expect(page.getByRole('button', { name: 'Intelligence View' })).toBeVisible();
  27 |   await expect(page.getByRole('button', { name: 'Import' })).toBeVisible();
  28 |   await expect(page.getByRole('button', { name: 'Add to Campaign' })).toBeVisible();
  29 |   await expect(page.getByRole('button', { name: 'Send List Email' })).toBeVisible();
  30 |
  31 |   // üîç Search box (inside "Search this list...")
  32 |   await expect(page.getByPlaceholder('Search this list...')).toBeVisible();
  33 |
  34 |   // üõ†Ô∏è List action icons (grid, filters, etc.)
  35 |   await expect(page.locator('button[title="List View Controls"]')).toBeVisible(); // gear icon
  36 |   await expect(page.locator('button[title="Select a List View"]')).toBeVisible(); // funnel/dropdown
  37 |
  38 |   console.log('‚úÖ All fields and buttons are present!');
  39 | });
```