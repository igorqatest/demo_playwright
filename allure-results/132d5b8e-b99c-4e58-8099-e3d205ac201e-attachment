# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: YouTube search for "Playwright by testers"
- Location: /Users/pejin/Documents/Playwright QA/tests/test-2.spec.ts:14:5

# Error details

```
Error: locator.waitFor: Error: strict mode violation: locator('#title') resolved to 32 elements:
    1) <div id="title" class="style-scope ytd-settings-sidebar-renderer"> </div> aka locator('ytd-settings-sidebar-renderer #title')
    2) <div id="title" class="style-scope ytd-rich-grid-renderer"></div> aka locator('ytd-rich-grid-renderer #title').first()
    3) <yt-formatted-string id="title" aria-label="Your YouTube history is off" class="style-scope ytd-feed-nudge-renderer">Your YouTube history is off</yt-formatted-string> aka getByLabel('Your YouTube history is off')
    4) <yt-formatted-string id="title" aria-label="Try searching to get started" class="style-scope ytd-feed-nudge-renderer">Try searching to get started</yt-formatted-string> aka getByLabel('Try searching to get started')
    5) <div id="title" class="style-scope ytd-watch-metadata">‚Ä¶</div> aka locator('#above-the-fold div').filter({ hasText: 'Playwright Tutorial Full Course 2024 | Playwright Testing Tutorial' })
    6) <yt-formatted-string id="title" class="style-scope ytd-rich-list-header-renderer">Chapters</yt-formatted-string> aka locator('#structured-description').getByText('Chapters')
    7) <div id="title" class="style-scope ytd-video-description-transcript-section-renderer">Transcript</div> aka locator('#structured-description').getByText('Transcript', { exact: true })
    8) <h3 id="title" class="style-scope ytd-video-description-infocards-section-renderer">Testers Talk</h3> aka locator('#structured-description').getByText('Testers Talk', { exact: true })
    9) <div id="title" class="style-scope ytd-structured-description-playlist-lockup-renderer">Playwright by Testers Talk‚òëÔ∏è</div> aka locator('#structured-description').getByText('Playwright by Testers Talk‚òëÔ∏è')
    10) <div id="title" class="style-scope ytd-structured-description-playlist-lockup-renderer">Cypress by Testers Talk‚òëÔ∏è</div> aka locator('#structured-description').getByText('Cypress by Testers Talk‚òëÔ∏è')
    ...

Call log:
  - waiting for locator('#title') to be visible

    at /Users/pejin/Documents/Playwright QA/tests/test-2.spec.ts:50:16
```

# Test source

```ts
   1 | /* import { test, expect} from '@playwright/test';
   2 | test ( 'testing', async ({ page})=>{
   3 |     await page.goto('https://www.youtube.com/');
   4 |    await page.getByRole('button', { name: 'Reject the use of cookies and' }).click();
   5 |    await page.getByRole('combobox', { name: 'Search' }).fill('playwright by testers');
   6 |    await page.waitForTimeout(500);
   7 |    await page.getByRole('combobox', { name: 'Search' }).press('Enter');
   8 |    await page.getByRole('link', { name: 'Playwright by Testers Talk‚òëÔ∏è' }).click();
   9 | });
  10 |  */
  11 |
  12 | import { test, expect } from '@playwright/test';
  13 |
  14 | test('YouTube search for "Playwright by testers"', async ({ page }) => {
  15 |   await page.goto('https://www.youtube.com/');
  16 |
  17 |   // Dismiss cookie banner if present
  18 |   const rejectCookies = page.getByRole('button', { name: /Reject the use of cookies/i });
  19 |   if (await rejectCookies.isVisible()) {
  20 |     await rejectCookies.click();
  21 |   }
  22 |
  23 |   // Search input
  24 |   /* const searchInput = page.getByRole('combobox', { name: /Search/i });
  25 |   await searchInput.waitFor({ state: 'visible' });
  26 |   await searchInput.fill('playwright by testers');
  27 |   await page.waitForTimeout(500); */
  28 |   // üîç Click the Search button instead of pressing Enter
  29 |   /* const searchButton = page.getByRole('button', { name: /Search/i });
  30 |   await searchButton.click(); */
  31 |   //await searchInput.press('Enter');
  32 |   await page.getByPlaceholder('Search').fill('playwright by testers');
  33 |   await page.waitForTimeout(500);
  34 |   await page.getByPlaceholder('Search').press('Enter');
  35 |
  36 |
  37 |   const videoLink = page.getByRole('link', { name: /Playwright by Testers Talk/i });
  38 |   await page.waitForTimeout(1000);
  39 |   await videoLink.click(); 
  40 |
  41 |   //await expect(page).toHaveURL(/watch/);
  42 |   //await expect(page.getByRole('heading', { name: 'Playwright Tutorial Full Course 2024 | Playwright Testing Tutorial', exact: true }).locator('yt-formatted-string')).toContainText('Playwright');
  43 |   //await expect(page).toHaveTitle('Playwright Tutorial Full Course 2024 | Playwright Testing Tutorial');
  44 |   await page.waitForTimeout(1000);
  45 |   /* const signIn = page.getByRole('link', { name: 'Sign in' });
  46 |   await signIn.click(); */
  47 |   await page.getByText('Open panel').first().click();
  48 |   await page.waitForTimeout(2000);
  49 |   const titleDiv = page.locator('#title');
> 50 | await titleDiv.waitFor({ state: 'visible', timeout: 10000 });
     |                ^ Error: locator.waitFor: Error: strict mode violation: locator('#title') resolved to 32 elements:
  51 | console.log('‚úÖ Title became visible');
  52 | console.log('‚úÖ Video title is visible!');
  53 |
  54 |   await  page.goto('https://github.com/');
  55 |   await page.getByRole('link', { name: 'Sign in' }).click();
  56 |   await page.waitForTimeout(2000);
  57 |   await page.getByLabel('Homepage', { exact: true}).click();
  58 |   await page.getByText('Learn more').first().click();
  59 |   //await page.getByRole('link', { name: 'Sign in' }).click();
  60 |   await page.getByText('Sign up').first().click();
  61 |   
  62 |   console.log('‚úÖ Test passed');
  63 | });
```