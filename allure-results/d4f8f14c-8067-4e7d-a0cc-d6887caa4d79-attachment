# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: My first test
- Location: /Users/pejin/Documents/Playwright new/tests/member_ansel.spec.ts:4:5

# Error details

```
Error: expect(received).toContain(expected) // indexOf

Expected substring: "We will not pay benefits for any condition that is contributed to, caused by, or resulting from: 1 commission of or attempt to commit a felony, or voluntary participation in a riot or insurrection; 2 incarceration or imprisonment following conviction for a crime; 3 seeking non-emergency treatment during travel or activity outside the United States, Mexico, or Canada, unless the Insured receives confirmation of the diagnosis in the United States, Mexico, or Canada; 4 active duty service or training in the military (naval force, air force or National Guard/Reserves or equivalent) for service/training extending beyond 180 days of any state, country or international organization, unless specifically allowed by a provision of this Certificate; 5 involvement in any declared or undeclared war or act of war (not including acts of terrorism), while serving in the military or an auxiliary unit attached to the military, or working in an area of war whether voluntarily or as required by an employer; 6 a member of the Insured’s Immediate Family; In addition, We will not pay benefits for any of the following: 1 a Chronic Condition; 2 a Mental Illness; 3 a Maternity Condition; 4 “Not Covered” conditions as designated in the Conditions List."
Received string:    "We will not pay benefits for any condition that is contributed to, caused by, or resulting from:"
    at /Users/pejin/Documents/Playwright new/tests/member_ansel.spec.ts:89:34
```

# Test source

```ts
   1 |  import {test, expect} from '@playwright/test';
   2 | import {config} from './reusable.ts';
   3 |
   4 | test('My first test', async ({ page }) => {
   5 |     await page.goto(config.urlMemberAnsel, { waitUntil: 'domcontentloaded' });
   6 |     
   7 |     const emailInput = page.getByRole('textbox', { name: 'Enter your email' });
   8 |   
   9 |     // 👉 Now safely type with a delay
   10 |     await emailInput.type(config.userMemberAnsel, { delay: 10 });
   11 |     const passwordInput = page.locator('input[name="password"]');
   12 |     await passwordInput.type(config.passwordMemberAnsel, { delay: 10 });
   13 |     await page.getByRole('button', { name: 'Sign in' }).click();
   14 |     // ✅ Check the page title
   15 |   await expect(page).toHaveTitle(/Member Portal/);
   16 |   await page.waitForTimeout(15000);
   17 |   // ✅ Check important text exists
   18 |   await expect(page.getByRole('heading', { name: 'Coverage' })).toBeVisible();
   19 |
   20 |   //await expect(page.getByText('Note: This is a summary of')).toBeVisible();
   21 |   await expect(
   22 |     page.getByText('Note: This is a summary of', { exact: false })
   23 |   ).toHaveText(
   24 |     "Note: This is a summary of the important features of your coverage. This is not the insurance contract. Please refer to your certificate below for all details including the rights and obligations of both you and Ansel."
   25 |   );
   26 |   // --- Header ---
   27 |   await expect(page.getByRole('link', { name: 'Coverage' })).toBeVisible();
   28 |   await expect(page.getByRole('link', { name: 'Claims' })).toBeVisible();
   29 |   await expect(page.getByRole('link', { name: 'My info' })).toBeVisible();
   30 |
   31 |   await expect(page.getByRole('heading', { name: 'Coverage' })).toBeVisible();
   32 |   await expect(page.getByRole('heading', { name: 'Family info' })).toBeVisible();
   33 |
   34 |   await expect(page.getByRole('heading', { name: 'Costs' })).toBeVisible();
   35 |   await expect(page.getByRole('heading', { name: 'Policy document(s)' })).toBeVisible();
   36 |   await expect(page.getByRole('heading', { name: 'Benefit limits' })).toBeVisible();
   37 |   await expect(page.getByRole('heading', { name: 'Limitations and exclusions' })).toBeVisible();
   38 |
   39 |   await expect(page.getByText('A complete description of', { exact: false })).toContainText('A complete description of benefits, limitations, and exclusions will be provided in your certificate of Insurance and applicable Riders. All coverage is subject to the terms and conditions of the master group policy. We’ve provided a summary below.');
   40 |   // --- User Name ---
   41 |   await expect(page.getByText('Andres Fatima').nth(1)).toBeVisible();
   42 |   // --- Effective Date ---
   43 |   await expect(page.getByText('Effective 01/01/2025')).toBeVisible();
   44 |
   45 |   // --- Buttons ---
   46 |   await expect(page.getByRole('button', { name: 'File new claim' })).toBeVisible();
   47 |   await expect(page.getByRole('button', { name: 'Condition lookup' })).toBeVisible();
   48 |
   49 |   // --- Coverage values ---
   50 |   await expect(page.getByText('$200')).toBeVisible();
   51 |   await expect(page.getByText('$500')).toBeVisible();
   52 |   await expect(page.getByText('$1,000')).toBeVisible();
   53 |
   54 |   // --- Policy Document (Coverage Packet PDF) ---
   55 |   await expect(page.getByText('Coverage packet')).toBeVisible();
   56 |
   57 |   // --- Family Info ---
   58 |   await expect(page.getByText('Myself')).toBeVisible();
   59 |   await expect(page.getByText('Covered', { exact: true })).toBeVisible();
   60 |   await expect(page.getByRole('alert').filter({ hasText: 'Andres Fatima' })).toBeVisible();
   61 |
   62 |   // --- Footer Text ---
   63 |   await expect(page.getByText(/©2025 Ansel Health, Inc. All Rights Reserved./, { exact: true })).toBeVisible();
   64 |
   65 |   // --- Benefit Limits Section ---
   66 |   await expect(page.getByText('Benefit limits')).toBeVisible();
   67 |
   68 |   await expect(page.getByText('Benefits are paid if the', { exact: false })).toContainText(
   69 | 'Benefits are paid if the insured is diagnosed with a covered condition. Members may receive a benefit more than once as noted below.'
   70 |   );
   71 |   await expect(page.locator('span').filter({ hasText: 'Moderate' })).toBeVisible();
   72 |   await expect(page.locator('span').filter({ hasText: 'Severe' })).toBeVisible();
   73 |
   74 |
   75 |   await expect(page.locator('span').filter({ hasText: 'Catastrophic' })).toBeVisible();
   76 |
   77 |   // --- Limitations and Exclusions Section ---
   78 |   await expect(page.getByText('Limitations and exclusions')).toBeVisible();
   79 |   await expect(
   80 |     page.getByText('A complete description of', { exact: false })).toContainText(
   81 |     'A complete description of benefits, limitations, and exclusions will be provided in your certificate of Insurance and applicable Riders. All coverage is subject to the terms and conditions of the master group policy. We’ve provided a summary below.'
   82 |   );
   83 |
   84 |   await expect(page.getByText('Exclusions', { exact: true })).toBeVisible();
   85 |   const benefitsBlock = page.getByText('We will not pay benefits for any condition', { exact: false });
   86 |   const benefitsText = await benefitsBlock.textContent();
   87 |   const normalizedBenefitsText = benefitsText?.replace(/\s+/g, ' ').trim();
   88 |   
>  89 |   expect(normalizedBenefitsText).toContain(
      |                                  ^ Error: expect(received).toContain(expected) // indexOf
   90 |     'We will not pay benefits for any condition that is contributed to, caused by, or resulting from: 1 commission of or attempt to commit a felony, or voluntary participation in a riot or insurrection; 2 incarceration or imprisonment following conviction for a crime; 3 seeking non-emergency treatment during travel or activity outside the United States, Mexico, or Canada, unless the Insured receives confirmation of the diagnosis in the United States, Mexico, or Canada; 4 active duty service or training in the military (naval force, air force or National Guard/Reserves or equivalent) for service/training extending beyond 180 days of any state, country or international organization, unless specifically allowed by a provision of this Certificate; 5 involvement in any declared or undeclared war or act of war (not including acts of terrorism), while serving in the military or an auxiliary unit attached to the military, or working in an area of war whether voluntarily or as required by an employer; 6 a member of the Insured’s Immediate Family; In addition, We will not pay benefits for any of the following: 1 a Chronic Condition; 2 a Mental Illness; 3 a Maternity Condition; 4 “Not Covered” conditions as designated in the Conditions List.'
   91 |   );
   92 |
   93 |   await expect(page.getByText('Waiting periods', { exact: true })).toBeVisible();
   94 |   await expect(page.getByText('Renewability, cancellation, & termination', { exact: true })).toBeVisible();
   95 |
   96 |   // --- Call to Support ---
   97 |   //await expect(page.getByText('(888) 300-5382', { exact: true })).toBeVisible();
   98 |
   99 |   // --- Check a Button Background Color (optional) ---
  100 |   const newClaimBtn = page.getByRole('button', { name: 'File new claim' });
  101 |   const backgroundColor = await newClaimBtn.evaluate((el) => {
  102 |     return window.getComputedStyle(el).backgroundColor;
  103 |   });
  104 |   console.log('File New Claim Button color:', backgroundColor);
  105 |   // You can validate color if needed, e.g.
  106 |   // expect(backgroundColor).toBe('rgb(33, 133, 208)');
  107 | }); 
  108 |
  109 |
```