# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Submit proposal form with dynamic data
- Location: /Users/pejin/Documents/Playwright QA/tests/test-28.spec.ts:7:5

# Error details

```
Error: locator.scrollIntoViewIfNeeded: Test timeout of 30000ms exceeded.
Call log:
  - waiting for locator('text=Yes, I accept this proposal')

    at /Users/pejin/Documents/Playwright QA/tests/test-28.spec.ts:42:61
```

# Test source

```ts
   1 | import { test, expect } from '@playwright/test';
   2 | import { faker } from '@faker-js/faker';
   3 | import { addDays, format } from 'date-fns';
   4 | import { chromium } from '@playwright/test';
   5 |
   6 |
   7 | test('Submit proposal form with dynamic data', async ({ page }) => {
   8 |   await page.goto('https://brella--qa.sandbox.lightning.force.com/lightning/r/Quote/0Q0QL000001KU2z0AG/view');
   9 |
  10 |   await page.getByRole('textbox', { name: 'Username' }).fill('qa@joinansel.com.qa');
  11 |   await page.getByRole('textbox', { name: 'Password' }).fill('q8xPmBoudN1W');
  12 |   await page.getByRole('button', { name: 'Log In to Sandbox' }).click();
  13 |
  14 |   await page.getByRole('tab', { name: 'Details' }).click();
  15 |   await page.waitForTimeout(1000);
  16 |
  17 |   const proposalLink = page.getByRole('link', { name: /https:\/\/qa-ansel-platform/ });
  18 |   
  19 |   const browser = await chromium.launch({
  20 |     headless: false, // or true if you're running headless
  21 |     args: [
  22 |       '--disable-geolocation',              // disables geolocation
  23 |       '--use-fake-ui-for-media-stream',     // prevents all media permission prompts (optional)
  24 |       '--disable-popup-blocking'            // allows popups to open automatically (optional)
  25 |     ],
  26 |   });
  27 |   const context = await browser.newContext({
  28 |     permissions: [], // Do not allow geolocation
  29 |   });
  30 |
  31 |
  32 |   await proposalLink.scrollIntoViewIfNeeded();
  33 | const [newPage] = await Promise.all([
  34 |     page.context().waitForEvent('page'),
  35 |     proposalLink.click(),
  36 |   ]);
  37 |   
  38 |   
  39 |
  40 |   await newPage.waitForLoadState();
  41 |
> 42 |   await newPage.locator('text=Yes, I accept this proposal').scrollIntoViewIfNeeded();
     |                                                             ^ Error: locator.scrollIntoViewIfNeeded: Test timeout of 30000ms exceeded.
  43 |   await newPage.getByText('Yes, I accept this proposal').click();
  44 |
  45 |   const firstName = faker.person.firstName();
  46 |   const lastName = faker.person.lastName();
  47 |   const randomEmail = `igor.pejin+${faker.string.alphanumeric(8)}@joinansel.com`;
  48 |   const ackFirstName = faker.person.firstName();
  49 |   const ackLastName = faker.person.lastName();
  50 |   const ackEmail = `igor.pejin+${faker.string.alphanumeric(8)}@joinansel.com`;
  51 |
  52 |   await newPage.locator('input[name="contactFirstName"]').fill(firstName);
  53 |   await newPage.locator('input[name="contactLastName"]').fill(lastName);
  54 |   await newPage.locator('input[name="contactEmail"]').fill(randomEmail);
  55 |   await newPage.getByRole('textbox', { name: '(XXX) XXX-XXXX' }).fill('1234567890');
  56 |   await newPage.getByText('Ansel enrollment platform').click();
  57 |
  58 |   // --- 🗓️ Pick Start Date ---
  59 |   const today = format(new Date(), 'MM/dd/yyyy');
  60 |   const threeWeeksLater = format(addDays(new Date(), 21), 'MM/dd/yyyy');
  61 |   
  62 |   // 2. Remove readonly and type for Start Date
  63 |   await newPage.evaluate(() => {
  64 |     const input = document.querySelector('input[name="enrollmentStartDate"]');
  65 |     if (input) input.removeAttribute('readonly');
  66 |   });
  67 |   await newPage.locator('input[name="enrollmentStartDate"]').fill(today);
  68 |   
  69 |   // 3. Remove readonly and type for End Date
  70 |   await newPage.evaluate(() => {
  71 |     const input = document.querySelector('input[name="enrollmentEndDate"]');
  72 |     if (input) input.removeAttribute('readonly');
  73 |   });
  74 |   await newPage.locator('input[name="enrollmentEndDate"]').fill(threeWeeksLater);
  75 |
  76 |   // --- Acknowledgment ---
  77 |   await newPage.locator('input[name="ackFirstName"]').fill(ackFirstName);
  78 |   await newPage.locator('input[name="ackLastName"]').fill(ackLastName);
  79 |   await newPage.locator('input[name="ackEmail"]').fill(ackEmail);
  80 |
  81 |   await newPage.getByText('By checking this box, I agree').click();
  82 |
  83 |   console.log('✅ Proposal filled successfully');
  84 |   /* const acceptButton = newPage.locator('button:has-text("Accept"):not([disabled])');
  85 | await acceptButton.waitFor({ state: 'visible' });
  86 |
  87 | // Then click it
  88 | await acceptButton.click(); */
  89 | });
```