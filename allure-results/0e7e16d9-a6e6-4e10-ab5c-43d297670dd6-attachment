# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Shopping link extraction and flow with fresh start
- Location: /Users/pejin/Documents/Playwright QA/tests/test-38.spec.ts:155:5

# Error details

```
Error: locator.isChecked: Test ended.
Call log:
  - waiting for getByRole('radio', { name: 'No' })

    at /Users/pejin/Documents/Playwright QA/tests/test-38.spec.ts:234:25
```

# Test source

```ts
  134 |   await newPage.locator('input[name="SET_STREET_ADDRESS"]').fill('123 Main St');
  135 |   await newPage.locator('input[name="SET_ZIP_CODE"]').fill('12345');
  136 |   await newPage.locator('input[name="SET_CITY"]').fill('Sample City');
  137 |
  138 |   await newPage.getByRole('button', { name: 'Next step' }).click();
  139 |   console.log('üì¨ Contact info filled');
  140 |
  141 |   await newPage.locator('input[name="password"]').fill('Demo123456');
  142 |   await newPage.locator('input[name="confirmPassword"]').fill('Demo123456');
  143 |   await newPage.evaluate(() => {
  144 |     const checkbox = document.querySelector('input[name="agreeToTerms"]');
  145 |     if (checkbox) checkbox.removeAttribute('readonly');
  146 |     (checkbox as HTMLInputElement).click();
  147 |   });
  148 |
  149 |   console.log('üîê Final step reached and password set.');
  150 | }); */
  151 |
  152 |
  153 | import { test, expect } from '@playwright/test';
  154 |
  155 | test('Shopping link extraction and flow with fresh start', async ({ page, context }) => {
  156 |   test.setTimeout(120_000);
  157 |   console.log('üöÄ Starting test...');
  158 |
  159 |   await page.goto('https://brella--qa.sandbox.lightning.force.com/lightning/r/Contract/800QL00000JP9MvYAL/view');
  160 |   await page.getByRole('textbox', { name: 'Username' }).fill('qa@joinansel.com.qa');
  161 |   await page.getByRole('textbox', { name: 'Password' }).fill('q8xPmBoudN1W');
  162 |   await page.getByRole('button', { name: 'Log In to Sandbox' }).click();
  163 |   console.log('‚úÖ Logged into Salesforce');
  164 |
  165 |   await page.getByRole('tab', { name: 'Related' }).click();
  166 |   console.log('üìÇ Opened Related tab');
  167 |
  168 |   for (let i = 0; i < 10; i++) await page.mouse.wheel(0, 60);
  169 |
  170 |   const csLink = page.getByRole('link', { name: /^CS-/ });
  171 |   await page.waitForTimeout(2000);
  172 |   await csLink.click();
  173 |   console.log('üîó Clicked CS- link');
  174 |
  175 |   await page.waitForTimeout(1000);
  176 |   await page.getByRole('tab', { name: 'Related' }).click();
  177 |   await page.getByRole('link', { name: 'Prospectives (6+)' }).click();
  178 |   await page.getByRole('heading', { name: 'Prospectives' }).click();
  179 |
  180 |   const firstNameLink = page.locator('a.slds-truncate >> visible=true').first();
  181 |   await firstNameLink.click({ force: true });
  182 |   console.log('‚úÖ Opened first prospective record');
  183 |
  184 |   await page.waitForTimeout(1000);
  185 |   await page.getByRole('tab', { name: 'Details' }).click();
  186 |   for (let i = 0; i < 10; i++) await page.mouse.wheel(0, 100);
  187 |
  188 |   // Extract SSN
  189 |   const ssnElement = page.locator('lightning-formatted-text').filter({ hasText: /^\d{3}-\d{2}-\d{4}$/ }).first();
  190 |   const ssn = await ssnElement.innerText();
  191 |
  192 |   // Extract and format DOB
  193 |   const dobElement = page.locator('lightning-formatted-text')
  194 |     .locator('xpath=../../..')
  195 |     .filter({ hasText: 'Date of Birth' })
  196 |     .locator('lightning-formatted-text');
  197 |
  198 |   const dobRaw = await dobElement.innerText();
  199 |   let [month, day, year] = dobRaw.split('/');
  200 |   month = month.padStart(2, '0');
  201 |   day = day.padStart(2, '0');
  202 |   const dob = `${month}/${day}/${year}`;
  203 |   console.log('üéÇ Extracted and formatted DOB:', dob);
  204 |
  205 |   // Click Get The Link
  206 |   await page.getByRole('button', { name: 'Get The Link' }).click();
  207 |   console.log('üéØ Clicked "Get The Link"');
  208 |
  209 |   const validTextarea = page.locator('textarea').filter({ hasText: /^https:\/\/.+/ }).first();
  210 |   await expect(validTextarea).toBeVisible({ timeout: 10000 });
  211 |
  212 |   const shoppingLink = await validTextarea.inputValue();
  213 |   console.log('üîó Extracted shopping link:', shoppingLink);
  214 |
  215 |   // Open in a new tab (ensures fresh state and skips remembering old flow)
  216 |   const newPage = await context.newPage();
  217 |   await newPage.goto(shoppingLink, { waitUntil: 'domcontentloaded' });
  218 |   console.log('üÜï Navigated to shopping link in new tab');
  219 |
  220 |   // Proceed with verify step
  221 |   await newPage.getByRole('button', { name: 'Next step' }).click();
  222 |   console.log('üîê Verification started');
  223 |
  224 |   await newPage.getByRole('textbox', { name: 'MM/DD/YYYY' }).fill(dob);
  225 |   await newPage.getByRole('textbox', { name: 'XXX-XX-XXXX' }).fill(ssn);
  226 |
  227 |   await newPage.getByRole('button', { name: 'Next step' }).click();
  228 |   console.log('üîì Verification passed');
  229 |
  230 |   // Select "No" for married, and "I'm not a parent"
  231 |   const marriedNo = newPage.getByRole('radio', { name: 'No' });
  232 |   const parentNone = newPage.getByRole('radio', { name: "I'm not a parent" });
  233 |
> 234 |   if (!(await marriedNo.isChecked())) await marriedNo.click();
      |                         ^ Error: locator.isChecked: Test ended.
  235 |   if (!(await parentNone.isChecked())) await parentNone.click();
  236 |   console.log('‚úÖ Marital and parental status set');
  237 |
  238 |   await newPage.getByRole('button', { name: 'Next step' }).click();
  239 |   console.log('‚û°Ô∏è Moved to next page after questions');
  240 |
  241 |   // Optionally: continue remaining steps as needed with logs
  242 |   // Example:
  243 |   await newPage.getByRole('button', { name: 'Next step' }).click();
  244 |   console.log('üì¶ Continued onboarding flow');
  245 |
  246 |   // Done!
  247 |   console.log('‚úÖ Flow completed to this point.');
  248 | });
  249 |
```