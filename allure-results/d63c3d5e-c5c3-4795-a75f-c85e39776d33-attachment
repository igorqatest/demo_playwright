# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Shopping only Primary
- Location: /Users/pejin/Documents/Playwright new/tests/ansel_shopping/ansel_family.spec.ts:4:5

# Error details

```
Error: locator.click: Test timeout of 120000ms exceeded.
Call log:
  - waiting for getByRole('button', { name: 'Save' })

    at /Users/pejin/Documents/Playwright new/tests/ansel_shopping/ansel_family.spec.ts:220:53
```

# Test source

```ts
  120 |     await page.mouse.wheel(0, 400);
  121 |     await page.waitForTimeout(100);
  122 |   }
  123 |   await newPage.waitForTimeout(2000);
  124 |   await newPage.getByRole('listbox').filter({ hasText: 'FemaleMale' }).click();
  125 |
  126 |   await newPage.waitForTimeout(1000);
  127 |
  128 | // Generate a random 9-digit phone number
  129 | const random9Digits = Math.floor(100000000 + Math.random() * 900000000);
  130 |
  131 | // Format it properly like (XXX) XXX-XXXX
  132 | const formattedPhone = `(${String(random9Digits).slice(0, 3)}) ${String(random9Digits).slice(3, 6)}-${String(random9Digits).slice(6)}`;
  133 |
  134 | await newPage.getByRole('textbox', { name: '(XXX) XXX-XXXX' }).type(formattedPhone, { delay: 100 });
  135 | console.log(`ðŸ“± Filled formatted phone number: ${formattedPhone}`);  
  136 | await newPage.waitForTimeout(1000);
  137 |
  138 | await newPage.getByRole('listbox').filter({ hasText: 'MobileStandard' }).click();
  139 |   await newPage.locator('input[name="SET_STREET_ADDRESS"]').fill('123 Main St');
  140 |   await newPage.waitForTimeout(1000);
  141 |
  142 |   await newPage.locator('input[name="SET_ZIP_CODE"]').fill('12345');
  143 |   await newPage.locator('input[name="SET_CITY"]').fill('Random City');
  144 |
  145 |
  146 | // ------------- SPOUSE (Jane) ---------------
  147 | await newPage.getByRole('button', { name: '+ Add dependent' }).click();
  148 | await newPage.getByRole('listbox').filter({ hasText: 'SpouseChildDomestic' }).click();
  149 | await newPage.getByRole('option', { name: 'Spouse' }).click();
  150 | await newPage.waitForTimeout(500);
  151 |
  152 | await newPage.locator('input[name="firstName"]').fill('Jane');
  153 | await newPage.locator('input[name="lastName"]').fill('Doe');
  154 |
  155 |
  156 | // DOB
  157 | await newPage.locator('input[name="birthdate"]').fill('01/01/2004');
  158 |
  159 | // SSN
  160 | function generateRandomSSN() {
  161 |   const part1 = Math.floor(100 + Math.random() * 400);
  162 |   const part2 = Math.floor(10 + Math.random() * 90);
  163 |   const part3 = Math.floor(1000 + Math.random() * 9000);
  164 |   return `${part1}-${part2}-${part3}`;
  165 | }
  166 | const randomSSN = generateRandomSSN();
  167 | await newPage.getByRole('textbox', { name: 'XXX-XX-XXXX' }).fill(randomSSN);
  168 | console.log(`âœ… SSN for Jane: ${randomSSN}`);
  169 |
  170 | // Open gender dropdown
  171 | await newPage.getByRole('listbox').filter({ hasText: /^FemaleMale$/ }).click();
  172 |
  173 |
  174 |
  175 | // Now click the first available option (Female or Male)
  176 | await newPage.locator('.visible.menu.transition div[role="option"]').first().click({ force: true });
  177 | console.log('âœ… Successfully selected the first gender option');
  178 |
  179 | await newPage.getByRole('button', { name: 'Save' }).click();
  180 |
  181 | // Scroll down
  182 | for (let i = 0; i < 10; i++) {
  183 |   await page.mouse.wheel(0, 400);
  184 |   await page.waitForTimeout(100);
  185 | }
  186 |
  187 | // ------------- CHILD (Mark) ---------------
  188 | await newPage.getByRole('button', { name: '+ Add dependent' }).click();
  189 | await newPage.waitForTimeout(500);
  190 |
  191 | await newPage.getByRole('listbox').filter({ hasText: 'Child' }).click();
  192 | await newPage.getByRole('option', { name: 'Child' }).click();
  193 | await newPage.waitForTimeout(500);
  194 |
  195 | await newPage.locator('input[name="firstName"]').fill('Mark');
  196 | await newPage.locator('input[name="lastName"]').fill('Smith');
  197 |
  198 |
  199 | // DOB
  200 | await newPage.locator('input[name="birthdate"]').fill('01/01/2004');
  201 |
  202 | // SSN for Mark
  203 | const randomSSN1 = generateRandomSSN();
  204 | await newPage.getByRole('textbox', { name: 'XXX-XX-XXXX' }).fill(randomSSN1);
  205 | console.log(`âœ… SSN for Mark: ${randomSSN1}`);
  206 |
  207 | // Open gender dropdown
  208 | await newPage.getByRole('listbox').filter({ hasText: /^FemaleMale$/ }).click();
  209 |
  210 |
  211 |
  212 | // Now click the first available option (Female or Male)
  213 | await newPage.locator('.visible.menu.transition div[role="option"]').first().click({ force: true });
  214 | console.log('âœ… Successfully selected the first gender option');
  215 | await newPage.getByRole('button', { name: 'Save' }).click();
  216 |
  217 | // Save dependent
  218 | await newPage.getByRole('button', { name: 'Next step' }).click();
  219 | console.log('ðŸ“¬ Contact info filled');
> 220 |
      | ^ Error: locator.click: Test timeout of 120000ms exceeded.
  221 |
  222 |
  223 | // PASSWORDS
  224 | await newPage.locator('input[name="password"]').fill('Demo123456');
  225 | await newPage.locator('input[name="confirmPassword"]').fill('Demo123456');
  226 | await newPage.evaluate(() => {
  227 |   const cb = document.querySelector('input[name="agreeToTerms"]');
  228 |   if (cb) cb.removeAttribute('readonly');
  229 |   (cb as HTMLInputElement)?.click();
  230 | });
  231 |
  232 |
  233 |   // Done!
  234 |   console.log('âœ… Flow completed to this point.'); 
  235 |   for (let i = 0; i < 10; i++) await page.mouse.wheel(0, 200);
  236 |   await newPage.getByRole('button', { name: 'Submit' }).click();
  237 |   console.log(' Final step complete, Shopping Finished');
  238 |
  239 | });
```