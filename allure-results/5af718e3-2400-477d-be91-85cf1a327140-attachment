# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: test
- Location: /Users/pejin/Documents/Playwright QA/tests/test-30.spec.ts:3:5

# Error details

```
Error: locator.scrollIntoViewIfNeeded: Test ended.
Call log:
  - attempting scroll into view action
    2 √ó waiting for element to be stable
      - element is not visible
    - retrying scroll into view action
    - waiting 20ms
    2 √ó waiting for element to be stable
      - element is not visible
    - retrying scroll into view action
      - waiting 100ms
    11 √ó waiting for element to be stable
       - element is not visible
     - retrying scroll into view action
       - waiting 500ms

    at /Users/pejin/Documents/Playwright QA/tests/test-30.spec.ts:34:21
```

# Test source

```ts
   1 | import { test, expect } from '@playwright/test';
   2 |
   3 | test('test', async ({ page }) => {
   4 |   await page.goto('https://brella--qa.sandbox.lightning.force.com/lightning/r/Contract/800QL00000JP9MvYAL/view');
   5 |   await page.getByRole('textbox', { name: 'Username' }).fill('qa@joinansel.com.qa');
   6 |   await page.getByRole('textbox', { name: 'Password' }).fill('q8xPmBoudN1W');
   7 |   await page.getByRole('button', { name: 'Log In to Sandbox' }).click();
   8 |
   9 |   console.log('üß≠ Logged in and navigating to Contract page');
  10 |
  11 |   // Click Related tab
  12 |   await page.getByRole('tab', { name: 'Related' }).click();
  13 |   console.log('üìÇ Opened Related tab');
  14 |
  15 |   // Manually scroll the page to the bottom (or a large Y value)
  16 |   for (let i = 0; i < 10; i++) {
  17 |     await page.mouse.wheel(0, 30);
  18 |   }
  19 |
  20 |   // Click the CS- link
  21 |   const csLink = page.getByRole('link', { name: /^CS-/ });
  22 |   await csLink.click();
  23 |   console.log('üîó Clicked CS- link');
  24 |
  25 |   // Wait and click Related tab again
  26 |   await page.waitForTimeout(1000);
  27 |   await page.getByRole('tab', { name: 'Related' }).click();
  28 |
  29 |   // Scroll down again
  30 |   await page.getByRole('link', { name: 'Prospectives (6+)' }).click();
  31 |   await page.getByRole('heading', { name: 'Prospectives' }).click();
  32 |   const firstNameLink = page.locator('a.slds-truncate').first();
  33 |
> 34 | await firstNameLink.scrollIntoViewIfNeeded();
     |                     ^ Error: locator.scrollIntoViewIfNeeded: Test ended.
  35 |
  36 | try {
  37 |   // Try native Playwright click
  38 |   await firstNameLink.click({ force: true });
  39 |   console.log('‚úÖ Clicked first name link using force.');
  40 | } catch (e) {
  41 |   console.warn('‚ö†Ô∏è Force click failed, attempting JS fallback...');
  42 |
  43 |   const handle = await firstNameLink.elementHandle();
  44 |   if (handle) {
  45 |     await page.evaluate(el => (el as HTMLElement).click(), handle);
  46 |     console.log('‚úÖ Fallback: Clicked link via JS evaluate().');
  47 |   } else {
  48 |     console.error('‚ùå Could not find the first name link element.');
  49 |   }
  50 | }
  51 |   
  52 | });
```