# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Shopping flow starts from beginning every time
- Location: /Users/pejin/Documents/Playwright QA/tests/test-38.spec.ts:3:5

# Error details

```
Error: locator.click: Target page, context or browser has been closed
Call log:
  - waiting for getByRole('link', { name: 'Prospectives (6+)' })

    at /Users/pejin/Documents/Playwright QA/tests/test-38.spec.ts:22:63
```

# Test source

```ts
   1 | import { test, expect, chromium } from '@playwright/test';
   2 |
   3 | test('Shopping flow starts from beginning every time', async () => {
   4 |   const browser = await chromium.launch();
   5 |   const context = await browser.newContext();
   6 |   const page = await context.newPage();
   7 |
   8 |   // 1. Login and navigate
   9 |   await page.goto('https://brella--qa.sandbox.lightning.force.com/lightning/r/Contract/800QL00000JP9MvYAL/view');
  10 |   await page.getByRole('textbox', { name: 'Username' }).fill('qa@joinansel.com.qa');
  11 |   await page.getByRole('textbox', { name: 'Password' }).fill('q8xPmBoudN1W');
  12 |   await page.getByRole('button', { name: 'Log In to Sandbox' }).click();
  13 |   console.log('‚úÖ Logged in');
  14 |
  15 |   await page.getByRole('tab', { name: 'Related' }).click();
  16 |   for (let i = 0; i < 10; i++) await page.mouse.wheel(0, 50);
  17 |   const csLink = page.getByRole('link', { name: /^CS-/ });
  18 |   await csLink.click();
  19 |   console.log('üîó Clicked CS link');
  20 |
  21 |   await page.getByRole('tab', { name: 'Related' }).click();
> 22 |   await page.getByRole('link', { name: 'Prospectives (6+)' }).click();
     |                                                               ^ Error: locator.click: Target page, context or browser has been closed
  23 |   await page.getByRole('heading', { name: 'Prospectives' }).click();
  24 |   await page.locator('a.slds-truncate >> visible=true').first().click({ force: true });
  25 |
  26 |   await page.getByRole('tab', { name: 'Details' }).click();
  27 |   for (let i = 0; i < 10; i++) await page.mouse.wheel(0, 50);
  28 |
  29 |   // Extract SSN & DOB
  30 |   const ssn = await page.locator('lightning-formatted-text').filter({ hasText: /^\d{3}-\d{2}-\d{4}$/ }).first().innerText();
  31 |   const dobRaw = await page.locator('lightning-formatted-text')
  32 |     .locator('xpath=../../..')
  33 |     .filter({ hasText: 'Date of Birth' })
  34 |     .locator('lightning-formatted-text').innerText();
  35 |
  36 |   const [month, day, year] = dobRaw.split('/').map(v => v.padStart(2, '0'));
  37 |   const dob = `${month}/${day}/${year}`;
  38 |   console.log(`üéÇ DOB: ${dob}, üîê SSN: ${ssn}`);
  39 |
  40 |   // Generate link
  41 |   await page.getByRole('button', { name: 'Get The Link' }).click();
  42 |   let link = '';
  43 |   const textareas = await page.locator('textarea').all();
  44 |   for (const ta of textareas) {
  45 |     const val = (await ta.inputValue()).trim();
  46 |     if (val.includes('https://qa-ansel-platform.joinansel.com/enrollment')) {
  47 |       link = val;
  48 |       break;
  49 |     }
  50 |   }
  51 |   if (!link) throw new Error('‚ùå No link found');
  52 |   console.log(`‚úÖ Link extracted: ${link}`);
  53 |
  54 |   // 2. New context (totally clean session)
  55 |   const freshContext = await browser.newContext(); // üîÑ Brand new session
  56 |   const newPage = await freshContext.newPage();
  57 |
  58 |   await newPage.goto('about:blank');
  59 |   await newPage.evaluate(() => {
  60 |     localStorage.clear();
  61 |     sessionStorage.clear();
  62 |   });
  63 |   await freshContext.clearCookies(); // üîê remove all cookies
  64 |
  65 |   // 3. Go to extracted shopping link
  66 |   await newPage.goto(link, { waitUntil: 'domcontentloaded' });
  67 |   console.log('üöÄ Opened standalone shopping link from fresh session');
  68 |
  69 |   // 4. Verification page
  70 |   await newPage.getByRole('button', { name: 'Next step' }).click();
  71 |   await newPage.getByRole('textbox', { name: 'MM/DD/YYYY' }).fill(dob);
  72 |   await newPage.getByRole('textbox', { name: 'XXX-XX-XXXX' }).fill(ssn);
  73 |   await newPage.getByRole('button', { name: 'Next step' }).click();
  74 |   console.log('‚úÖ Passed verification');
  75 |
  76 |   // 5. Continue with additional logic as needed...
  77 | });
```