# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Venmo Claim
- Location: /Users/pejin/Documents/actions/demo_playwright/tests/ansel_claims/claim_ansel_banka_account.spec.ts:4:5

# Error details

```
Error: locator.click: Target page, context or browser has been closed
Call log:
  - waiting for getByRole('button', { name: 'File new claim' })

    at /Users/pejin/Documents/actions/demo_playwright/tests/ansel_claims/claim_ansel_banka_account.spec.ts:21:62
```

# Test source

```ts
   1 | import { test, expect } from '@playwright/test';
   2 | import { config } from '../reusable';
   3 |
   4 | test('Venmo Claim', async ({ page }) => {
   5 |     test.setTimeout(120_000);
   6 |   console.log('✅ Navigating to Member Portal...');
   7 |   await page.goto(config.urlMemberAnsel, { waitUntil: 'domcontentloaded' });
   8 |
   9 |   console.log('✅ Filling in Login form...');
  10 |   const emailInput = page.getByRole('textbox', { name: 'Enter your email' });
  11 |   await emailInput.type(config.userMemberAnsel, { delay: 10 });
  12 |
  13 |   const passwordInput = page.locator('input[name="password"]');
  14 |   await passwordInput.type(config.passwordMemberAnsel, { delay: 10 });
  15 |
  16 |   await page.getByRole('button', { name: 'Sign in' }).click();
  17 |
  18 |   console.log('✅ Waiting for Dashboard to load...');
  19 |   await page.waitForTimeout(15000); // Adjust the timeout as needed
  20 |
> 21 |   await page.getByRole('button', { name: 'File new claim' }).click();
     |                                                              ^ Error: locator.click: Target page, context or browser has been closed
  22 |   await page.getByRole('button', { name: 'Next step' }).click();
  23 |
  24 |   await page.locator('textarea[name="symptoms"]').fill('test');
  25 |   await page.locator('textarea[name="providerDiagnosis"]').fill('test');
  26 |   await page.locator('textarea[name="treatment"]').fill('test');
  27 |   await page.locator('textarea[name="additionalInfo"]').fill('test');
  28 |   await page.waitForTimeout(1000);
  29 |   await page.getByRole('button', { name: 'Next step' }).click();
  30 |
  31 |
  32 |   await page.getByText('Emergency room').click();
  33 |   for (let i = 0; i < 10; i++) {
  34 |     await page.mouse.wheel(0, 200);
  35 |     await page.waitForTimeout(100);
  36 |   }
  37 | // 1. Type into the hospital field
  38 | await page.locator('input.prompt').fill('Hospital');
  39 |
  40 | // 2. Wait for the suggestions to appear
  41 | await page.waitForSelector('.results.visible .result');
  42 |
  43 | // 3. Click the first suggestion
  44 | await page.locator('.results.visible .result').first().click();
  45 |
  46 | console.log('✅ Successfully clicked the first hospital!');
  47 | //Tell us where you were treated
  48 | await page.getByRole('button', { name: 'Next step' }).click();
  49 | //Let´s prepare your documents
  50 | await page.getByRole('button', { name: 'Next step' }).click();
  51 | // Upload your pictures
  52 | await page.getByRole('button', { name: 'Next step' }).click();
  53 | // Confirm uploads
  54 | await page.getByRole('button', { name: 'Next step' }).click();
  55 | // Payment preference
  56 | for (let i = 0; i < 10; i++) {
  57 |   await page.mouse.wheel(0, 400);
  58 |   await page.waitForTimeout(100);
  59 | }
  60 | await page.getByRole('button', { name: '+Add payment method' }).click();
  61 | await page.getByRole('row', { name: 'Bank account Configure' }).getByRole('button').click();
  62 | await page.locator('input[name="firstName"]').fill('John');
  63 | await page.locator('input[name="lastName"]').fill('Doe');
  64 | await page.getByRole('textbox', { name: 'XXXXXXXXX' }).fill('110000000');
  65 | await page.locator('input[name="accountNumber"]').fill('000123456789');
  66 | await page.getByRole('button', { name: 'Submit' }).click();
  67 |
  68 |
  69 | await page.waitForTimeout(4000);
  70 | await page.getByRole('button', { name: 'Next step' }).click();
  71 |
  72 | for (let i = 0; i < 10; i++) {
  73 |     await page.mouse.wheel(0, 400);
  74 |     await page.waitForTimeout(100);
  75 |   }
  76 |  await page.locator('label').first().click();
  77 |  await page.getByRole('button', { name: 'Submit' }).click();
  78 |
  79 | // Wait page to settle
  80 | await page.waitForLoadState('networkidle');
  81 | console.log('✅ Page reloaded or settled');
  82 |
  83 | // Freshly find the "All done" button
  84 | await page.getByRole('button', { name: 'All done' }).click();
  85 | console.log('✅ Successfully clicked "All done" button'); 
  86 |
  87 | });
```